{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nvar _jsxFileName = \"D:\\\\Sources\\\\App\\\\ReactNative\\\\Learn\\\\Redux\\\\TodoApp\\\\App.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { StatusBar } from 'expo-status-bar';\nimport React, { useState } from 'react';\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ListTask from \"./src/ListTask\";\nimport { createStore } from 'redux';\nvar appState = {\n  number: 1\n};\nvar add = {\n  type: 'ADD',\n  value: 1\n};\nvar sub = {\n  type: 'SUB',\n  value: 1\n};\n\nvar numberReducer = function numberReducer(state, action) {\n  switch (action.type) {\n    case 'ADD':\n      state = _objectSpread(_objectSpread({}, state), {}, {\n        number: state.number + action.value\n      });\n      break;\n\n    case 'SUB':\n      state = _objectSpread(_objectSpread({}, state), {}, {\n        number: state.number - action.value\n      });\n      break;\n  }\n\n  return state;\n};\n\nvar store = createStore(numberReducer, appState);\nstore.subscribe(function () {\n  console.log('State updated', store.getState());\n});\nstore.dispatch(add);\nstore.dispatch(add);\nstore.dispatch(add);\nstore.dispatch(sub);\nexport default function App() {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      task = _useState2[0],\n      setTask = _useState2[1];\n\n  var _useState3 = useState([{\n    id: 1,\n    task: 'task1',\n    done: false\n  }, {\n    id: 2,\n    task: 'task2',\n    done: false\n  }, {\n    id: 3,\n    task: 'task3',\n    done: false\n  }, {\n    id: 4,\n    task: 'task4',\n    done: false\n  }]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      DATA = _useState4[0],\n      setDATA = _useState4[1];\n\n  var pressAddTask = function pressAddTask() {\n    if (task !== '') {\n      var id = DATA.length + 1;\n      var dataTmp = [].concat(_toConsumableArray(DATA), [{\n        id: id,\n        task: task,\n        done: false\n      }]);\n      setDATA(dataTmp);\n      setTask('');\n    }\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: {\n      backgroundColor: '#fff',\n      padding: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: {\n      textAlign: 'center',\n      fontSize: 25,\n      fontWeight: 'bold'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }\n  }, \"To Do App\"), React.createElement(View, {\n    style: {\n      flexDirection: 'row',\n      marginVertical: 15\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }\n  }, React.createElement(TextInput, {\n    style: {\n      borderWidth: 1,\n      borderColor: '#ddd',\n      width: '90%',\n      paddingHorizontal: 15\n    },\n    onChangeText: function onChangeText(value) {\n      return setTask(value);\n    },\n    value: task,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 11\n    }\n  }), React.createElement(Button, {\n    title: \"Add\",\n    style: {\n      width: '10%'\n    },\n    onPress: pressAddTask,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 11\n    }\n  }))), React.createElement(ListTask, {\n    data: DATA,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }\n  }));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#dddd'\n  }\n});","map":{"version":3,"sources":["D:/Sources/App/ReactNative/Learn/Redux/TodoApp/App.js"],"names":["StatusBar","React","useState","ListTask","createStore","appState","number","add","type","value","sub","numberReducer","state","action","store","subscribe","console","log","getState","dispatch","App","task","setTask","id","done","DATA","setDATA","pressAddTask","length","dataTmp","styles","container","backgroundColor","padding","textAlign","fontSize","fontWeight","flexDirection","marginVertical","borderWidth","borderColor","width","paddingHorizontal","StyleSheet","create","flex"],"mappings":"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","sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport React, { useState } from 'react';\nimport { Button, StyleSheet, Text, TextInput, View } from 'react-native';\nimport ListTask from './src/ListTask';\n\nimport { createStore } from 'redux'\n\n// state : Luu tru tat ca cac bien trong ung dung\n\nlet appState = { number: 1 }\n\n\n// action : Su kien do nguoi dung tuong tac voi ui tao ra\n\nconst add = {\n  type: 'ADD',\n  value: 1\n}\n\nconst sub = {\n  type: 'SUB',\n  value: 1\n}\n\n// reducer : tong hop dua tren state va action de xu ly\n// logic chinh\n\nconst numberReducer = (state, action) => {\n  switch (action.type) {\n    case 'ADD':\n      /** immutable state */\n      state = {\n        ...state,\n        number: state.number + action.value\n      }\n\n      /* mutable state */\n      //state.number += action.value;\n      break;\n    case 'SUB':\n      state = {\n        ...state,\n        number: state.number - action.value\n      }\n      //state.number -= action.value;\n      break;\n  }\n  return state;\n}\n\n// store : mot diem duy nhat trong ung dung (quan ly cac bien cua tat ca cac component trong ung dung)\nconst store = createStore(numberReducer, appState);\n\n// Test\nstore.subscribe(() => {\n  console.log('State updated', store.getState())\n})\n// \nstore.dispatch(add);\nstore.dispatch(add);\nstore.dispatch(add);\nstore.dispatch(sub);\n//\n\n\n\n\nexport default function App() {\n\n  const [task, setTask] = useState('');\n\n  const [DATA, setDATA] = useState([\n    {\n      id: 1,\n      task: 'task1',\n      done: false\n    },\n    {\n      id: 2,\n      task: 'task2',\n      done: false\n    },\n    {\n      id: 3,\n      task: 'task3',\n      done: false\n    },\n    {\n      id: 4,\n      task: 'task4',\n      done: false\n    },\n  ]);\n\n  const pressAddTask = () => {\n\n    if (task !== '') {\n      let id = DATA.length + 1;\n      let dataTmp = [...DATA, { id: id, task: task, done: false }]\n      setDATA(dataTmp);\n      setTask('');\n    }\n\n  }\n\n  return (\n    <View style={styles.container}>\n      <View style={{ backgroundColor: '#fff', padding: 10 }}>\n        <Text style={{ textAlign: 'center', fontSize: 25, fontWeight: 'bold' }}>To Do App</Text>\n        <View style={{ flexDirection: 'row', marginVertical: 15 }}>\n          <TextInput\n            style={{ borderWidth: 1, borderColor: '#ddd', width: '90%', paddingHorizontal: 15 }}\n            onChangeText={value => setTask(value)}\n            value={task}\n          />\n          <Button\n            title='Add'\n            style={{ width: '10%' }}\n            onPress={pressAddTask}\n          />\n        </View>\n      </View>\n      <ListTask\n        data={DATA}\n      />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#dddd',\n  },\n});\n"]},"metadata":{},"sourceType":"module"}