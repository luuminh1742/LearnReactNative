{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\Sources\\\\App\\\\ReactNative\\\\Learn\\\\Redux\\\\TodoApp\\\\App.js\";\nimport { StatusBar } from 'expo-status-bar';\nimport React, { useState } from 'react';\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Header from \"./src/Header\";\nimport ListTask from \"./src/ListTask\";\nexport default function App() {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      task = _useState2[0],\n      setTask = _useState2[1];\n\n  var _useState3 = useState([{\n    id: 1,\n    task: 'task1',\n    done: false\n  }, {\n    id: 2,\n    task: 'task2',\n    done: false\n  }, {\n    id: 3,\n    task: 'task3',\n    done: false\n  }, {\n    id: 4,\n    task: 'task4',\n    done: false\n  }]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      DATA = _useState4[0],\n      setDATA = _useState4[1];\n\n  var pressAddTask = function pressAddTask() {\n    var id = DATA.length + 1;\n    var dataTmp = [].concat(_toConsumableArray(DATA), [{\n      id: id,\n      task: task,\n      done: false\n    }]);\n    setDATA(dataTmp);\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: {\n      backgroundColor: '#fff',\n      padding: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: {\n      textAlign: 'center',\n      fontSize: 25,\n      fontWeight: 'bold'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, \"To Do App\"), React.createElement(View, {\n    style: {\n      flexDirection: 'row',\n      marginVertical: 15\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, React.createElement(TextInput, {\n    style: {\n      borderWidth: 1,\n      borderColor: '#ddd',\n      width: '90%',\n      paddingHorizontal: 15\n    },\n    onChangeText: function onChangeText(value) {\n      return setTask(value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  }), React.createElement(Button, {\n    title: \"Add\",\n    style: {\n      width: '10%'\n    },\n    onPress: pressAddTask,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }))), React.createElement(ListTask, {\n    data: DATA,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#dddd'\n  }\n});","map":{"version":3,"sources":["D:/Sources/App/ReactNative/Learn/Redux/TodoApp/App.js"],"names":["StatusBar","React","useState","Header","ListTask","App","task","setTask","id","done","DATA","setDATA","pressAddTask","length","dataTmp","styles","container","backgroundColor","padding","textAlign","fontSize","fontWeight","flexDirection","marginVertical","borderWidth","borderColor","width","paddingHorizontal","value","StyleSheet","create","flex"],"mappings":"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","sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport React, { useState } from 'react';\nimport { Button, StyleSheet, Text, TextInput, View } from 'react-native';\nimport Header from './src/Header';\nimport ListTask from './src/ListTask';\n\nexport default function App() {\n\n  const [task, setTask] = useState('');\n\n  const [DATA,setDATA] = useState([\n    {\n      id: 1,\n      task: 'task1',\n      done: false\n    },\n    {\n      id: 2,\n      task: 'task2',\n      done: false\n    },\n    {\n      id: 3,\n      task: 'task3',\n      done: false\n    },\n    {\n      id: 4,\n      task: 'task4',\n      done: false\n    },\n  ]);\n\n  const pressAddTask = () => {\n\n    let id = DATA.length + 1;\n    let dataTmp = [...DATA,{id:id,task:task,done:false}]\n    setDATA(dataTmp);\n  }\n\n  return (\n    <View style={styles.container}>\n      <View style={{ backgroundColor: '#fff', padding: 10 }}>\n        <Text style={{ textAlign: 'center', fontSize: 25, fontWeight: 'bold' }}>To Do App</Text>\n        <View style={{ flexDirection: 'row', marginVertical: 15 }}>\n          <TextInput\n            style={{ borderWidth: 1, borderColor: '#ddd', width: '90%', paddingHorizontal: 15 }}\n            onChangeText={value => setTask(value)}\n          />\n          <Button\n            title='Add'\n            style={{ width: '10%' }}\n            onPress={pressAddTask}\n          />\n        </View>\n      </View>\n      <ListTask\n        data={DATA}\n      />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#dddd',\n  },\n});\n"]},"metadata":{},"sourceType":"module"}